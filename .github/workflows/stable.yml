name: CI-stable

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Delete
        uses: jimschubert/delete-artifacts-action@v1
        with:
          log_level: 'debug'
          min_bytes: '0'
          
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: stable
                    
      - name: Get latest tag
        id: getTag
        run: |
          GIT_TAG=$(git tag -l | sort | tail -n1)
          echo ::set-output name=gitTag::${GIT_TAG}

      - name: Esy setup
        run: |
          rm -rf ~/.esy
          rm -rf /esy/store
          docker build --network=host -t ubuntu scripts/docker/ubuntu
          docker container run --rm \
              --name ubuntu \
              --network=host \
              --volume `pwd`:/oni2 \
              --volume ~/.esy:/esy/store \
              --cap-add SYS_ADMIN \
              --device /dev/fuse \
              --security-opt apparmor:unconfined \
              ubuntu \
              /bin/bash -c 'chown -R root oni2 && cd oni2 && ./scripts/docker-ubuntu-build.sh "./scripts/patches/package.patch"'
          sudo chown -R "$(id -u -n)" ../oni2
          tar -cvf AppDir.tar _release/Onivim2.AppDir
          mkdir AppCache
          cp -r $(find ~/.esy -type d -path '*i/*camomile-opam*/share/camomile') AppCache
          tar -cvf AppCache.tar AppCache
          sudo rm -rf ~/.esy
          sudo rm -rf _release/Onivim2.AppDir

      - name: Build appimage
        run: |
          tar -xf AppDir.tar
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod a+x appimagetool
          ARCH=x86_64 ./appimagetool _release/Onivim2.AppDir
          sudo rm -rf _release/Onivim2.AppDir

      - uses: ncipollo/release-action@v1.9.0
        with:
          artifacts: "AppDir.tar, AppCache.tar, Onivim2-x86_64.AppImage"
          commit: "stable"
          name: ${{ steps.getTag.outputs.gitTag }}
          tag: ${{ steps.getTag.outputs.gitTag }}
          body: "Stable release."
          token: ${{ secrets.GITHUB_TOKEN }}
